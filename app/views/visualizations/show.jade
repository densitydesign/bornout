extends ../layouts/default

block main
  ul.breadcrumb
    li
      a(href="/") Home 
      span.divider /
    li
      a(href="/sections/") Sections 
      span.divider /
    li
      a(href="/sections/" + section.slug) #{section.title} 
      span.divider /
    li
      a(href="/sections/" + section.slug + "/chapters/" + chapter.slug) #{chapter.title} 
      span.divider /
    li.active= visualization.title
  
  h3= visualization.title + ' '
    span(class='btn-group')
      small
        form.center.form-inline.confirm(action='/sections/' + section.slug + '/chapters/' + chapter.slug + "/visualizations/"+visualization.slug, method="post", id='ed')
          input(type='hidden', name='_csrf', value="#{csrf_token}")
          a.btn.btn-mini(href='/sections/' + section.slug + '/chapters/' + chapter.slug + '/visualizations/'+visualization.slug+'/edit', title="edit") Edit
          input(type="hidden", name="_method", value="DELETE")
          button.btn.btn-danger.btn-mini(type="submit") delete

block content
  
  .row-fluid
    .span9
      .vis-content
        != visualization.content
        button.btn.btn-mini(type='button', id="resetZoom")
          i.icon-fullscreen
    .span3
      p!= visualization.description

      input(id="zoom", type="hidden", value=visualization.zoom.toString())

      ul.pager
        - if (prevPage)
          li.previous
            a(href="/sections/" + section.slug + "/chapters/" + chapter.slug + "/visualizations/" + prevPage.slug) ←
        - else
          li.previous
            a(href="/sections/" + section.slug + "/chapters/" + chapter.slug) ←

        - if (nextPage)
          li.next
            a(href="/sections/" + section.slug + "/chapters/" + chapter.slug + "/visualizations/" + nextPage.slug) →
        - else
          - if (nextChapter)
            li.next
              a(href="/sections/" + section.slug + "/chapters/" + nextChapter.slug) →
          -else
            li.next.disabled
              a(href='#') →

      hr
      .vis-legend
        != visualization.legend


  script.
    window.addEventListener('load', function(){
      var zoomable = $('#zoom').val();
      if(zoomable != "true") return;
      var zoomBehavior = d3.behavior.zoom();
      var width = $(".vis-content").width();
      d3.select(".vis-content").style("overflow","hidden")
      d3.select("svg")
      .attr("width", width)
      .call(zoomBehavior.scaleExtent([1,10]).on("zoom", zoom));
      d3.select("#resetZoom").on("click", function(d){
            zoomBehavior.scale(1);
            zoomBehavior.translate([0, 0]);
            d3.select("svg").select("g").transition().duration(500).attr('transform', 'translate(' + zoomBehavior.translate() + ') scale(' + zoomBehavior.scale() + ')');
          })

      function zoom() {
        d3.select("svg").select("g").attr("transform", "translate(" + d3.event.translate + ")scale(" + d3.event.scale + ")");
      }

    })